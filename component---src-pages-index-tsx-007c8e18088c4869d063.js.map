{"version":3,"file":"component---src-pages-index-tsx-007c8e18088c4869d063.js","mappings":"yOA6GA,UAxEqD,SAAAA,GAYlD,IAXDC,UAAU,OAAEC,GACZC,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,IAEtCC,mBAAmB,MAAEC,GACrBC,MACEC,iBAAiB,gBAAEC,GAAiB,UACpCC,KAGLd,EACC,MAAOe,EAAkBC,IAAuBC,EAAAA,EAAAA,IAC9CC,EAAAA,KAEKC,EAAcC,IAAmBH,EAAAA,EAAAA,IAAeI,EAAAA,IAIjDC,GAAaC,EAAAA,EAAAA,UAAQ,KACzB,MAAMD,EAAgD,CAAEE,IAAK,GAa7D,OAXAd,EAAMe,SAAQC,IAAc,IAAb,KAAEC,GAAMD,EACrB,MAAQJ,WAAYM,GAAmBD,EAAKE,YAE5CD,EAAeH,SAAQK,SACQC,IAAzBT,EAAWQ,GAAyBR,EAAWQ,GAAY,EAC1DR,EAAWQ,IAAW,IAG7BR,EAAWE,KAAK,IAGXF,CAAU,GAChB,CAACZ,IAmBJ,OAjBAsB,EAAAA,EAAAA,YAAU,KACRZ,EAAgBE,EAAW,GAC1B,CAACA,KAEJU,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAA8BC,EAAAA,EAAAA,MAAkBhC,GAChD4B,EACuB,iBAApBG,EAAOH,UAA0BG,EAAOH,SAE3CG,EAAOH,SADP,MAGNd,EAAoBc,EAAS,GAC5B,CAAC5B,KAMFiC,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CACP9B,MAAOA,EACPC,YAAaA,EACb8B,IAAK7B,EACL8B,MAAOxB,IAEPqB,EAAAA,EAAAA,IAACI,EAAAA,EAAY,CAACC,aAAc3B,KAK5BsB,EAAAA,EAAAA,IAACM,EAAAA,EAAS,OACVN,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAAC3B,iBAAkBA,EAAkB4B,MAAOjC,IAG3D,C","sources":["webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useMemo, useState } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\nimport { PostListItemType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\nimport Introduction from 'components/Main/Introduction'\nimport PostList from 'components/Main/PostList'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport ToggleNav from 'components/Main/ToggleNav'\nimport { useRecoilState } from 'recoil'\nimport { selectedCategoryState, categoryListState } from '../recoil/recoil'\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const [selectedCategory, setSelectedCategory] = useRecoilState(\n    selectedCategoryState,\n  )\n  const [categoryList, setCategoryList] = useRecoilState(categoryListState)\n\n  // ...\n\n  const categories = useMemo(() => {\n    const categories: CategoryListProps['categoryList'] = { All: 0 }\n\n    edges.forEach(({ node }) => {\n      const { categories: postCategories } = node.frontmatter\n\n      postCategories.forEach(category => {\n        if (categories[category] === undefined) categories[category] = 1\n        else categories[category]++\n      })\n\n      categories.All++\n    })\n\n    return categories\n  }, [edges])\n\n  useEffect(() => {\n    setCategoryList(categories)\n  }, [categories])\n\n  useEffect(() => {\n    const parsed: ParsedQuery<string> = queryString.parse(search)\n    const category =\n      typeof parsed.category !== 'string' || !parsed.category\n        ? 'All'\n        : parsed.category\n\n    setSelectedCategory(category)\n  }, [search])\n\n  // console.log(categoryList)\n  // console.log(selectedCategory)\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      {/* <CategoryList\n        categoryList={categoryList}\n        selectedCategory={selectedCategory}\n      /> */}\n      <ToggleNav />\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  )\n}\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["_ref","location","search","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","publicURL","selectedCategory","setSelectedCategory","useRecoilState","selectedCategoryState","categoryList","setCategoryList","categoryListState","categories","useMemo","All","forEach","_ref2","node","postCategories","frontmatter","category","undefined","useEffect","parsed","queryString","___EmotionJSX","Template","url","image","Introduction","profileImage","ToggleNav","PostList","posts"],"sourceRoot":""}