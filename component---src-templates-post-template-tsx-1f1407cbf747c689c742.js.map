{"version":3,"file":"component---src-templates-post-template-tsx-1f1407cbf747c689c742.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/copy-to-clipboard/index.js","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx","webpack://gatsby-starter-default/./node_modules/toggle-selection/index.js"],"sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import React, { FunctionComponent, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'gatsby'\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n}\n\n// const PostHeadInfoWrapper = styled.div`\n//   margin-top: 5.5rem;\n//   width: 768px;\n//   margin-left: auto;\n//   margin-right: auto;\n\n//   @media (max-width: 768px) {\n//     width: 100%;\n//     padding: 40px 20px;\n//   }\n// `\n\n// const PrevPageIcon = styled.div`\n//   display: grid;\n//   place-items: center;\n//   width: 40px;\n//   height: 40px;\n//   border-radius: 50%;\n//   background: #ffffff;\n//   color: #000000;\n//   font-size: 22px;\n//   cursor: pointer;\n//   box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n//   @media (max-width: 768px) {\n//     width: 30px;\n//     height: 30px;\n//     font-size: 18px;\n//   }\n// `\n\nconst HeadWrap = styled.div`\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  line-height: 1.5;\n  letter-spacing: -0.004em;\n  margin-top: 0px;\n  font-weight: 800;\n  color: var(--text1);\n  margin-bottom: 2rem;\n  word-break: keep-all;\n  transition: color 0.125s ease-in 0s;\n\n  @media (max-width: 1024px) {\n    font-size: 2.25rem;\n  }\n`\n\nconst DateWrap = styled.div`\n  -webkit-box-align: center;\n  align-items: center;\n  font-size: 1rem;\n  color: var(--text2);\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    margin-bottom: 0.75rem;\n  }\n`\n\nconst Information = styled.div``\n\nconst Like = styled.div`\n  display: none;\n  @media (max-width: 1024px) {\n    display: flex;\n    background: var(--bg-element1);\n    border: 1px solid var(--border2);\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    height: 1.5rem;\n    border-radius: 0.75rem;\n    outline: none;\n    cursor: pointer;\n  }\n`\n\nconst Heartsvg = styled.svg`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.75rem;\n`\n\nconst LikeCount = styled.span`\n  font-size: 0.75rem;\n  font-weight: bold;\n`\n\nconst Date = styled.span`\n  color: var(--text2);\n  font-weight: bold;\n  @media (max-width: 768px) {\n    font-size: 0.875rem;\n  }\n`\n\nconst Separator = styled.span`\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n`\n\nconst View = styled.span`\n  font-size: 1rem;\n  color: var(--text2);\n  @media (max-width: 768px) {\n    font-size: 0.875rem;\n  }\n`\n\nconst CateWrap = styled.div`\n  margin-top: 0.875rem;\n  margin-bottom: -0.875rem;\n  min-height: 0.875rem;\n\n  @media (max-width: 768px) {\n    margin-top: 0.5rem;\n    margin-bottom: -0.5rem;\n    min-height: 0.5rem;\n  }\n`\n\nconst Cate = styled.div`\n  margin-bottom: 0.875rem;\n  background: var(--bg-tag);\n  padding-left: 1rem;\n  padding-right: 1rem;\n  height: 2rem;\n  border-radius: 1rem;\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-right: 0.875rem;\n  color: var(--velog);\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 1rem;\n\n  @media (max-width: 768px) {\n    height: 1.5rem;\n    font-size: 0.75rem;\n    border-radius: 0.75rem;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  // const goBackPage = () => window.history.back()\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [viewCount, setViewCount] = useState(0)\n  const [likeCount, setLikeCount] = useState<number>(0)\n  const [likeStatus, setLikeStatus] = useState<boolean>()\n\n  useEffect(() => {\n    const fetchViewCount = async () => {\n      try {\n        const pathname = window.location.pathname\n        const decodedValue = decodeURIComponent(\n          pathname.replace(/^\\/+|\\/+$/g, ''),\n        )\n        const response = await fetch(\n          `https://port-0-minlog-be-dihik2mliwbygs1.sel4.cloudtype.app/api/get_count/${encodeURIComponent(\n            decodedValue,\n          )}`,\n          {\n            method: 'POST',\n          },\n        )\n\n        if (response.ok) {\n          const data = await response.json()\n          setViewCount(data.view_count)\n          setLikeCount(data.like_count)\n          setLikeStatus(data.liked)\n          setIsLoading(false)\n        } else {\n          throw new Error('네트워크 응답이 좋지 않았습니다.')\n        }\n      } catch (error) {\n        console.log('조회수, 좋아요를 불러오는데 에러 발생:', error)\n      }\n    }\n\n    fetchViewCount()\n  }, [])\n\n  const handleClick = async () => {\n    try {\n      const pathname = window.location.pathname\n      const decodedValue = decodeURIComponent(\n        pathname.replace(/^\\/+|\\/+$/g, ''),\n      )\n      const response = await fetch(\n        `https://port-0-minlog-be-dihik2mliwbygs1.sel4.cloudtype.app/api/like/${encodeURIComponent(\n          decodedValue,\n        )}`,\n        {\n          method: 'PUT',\n        },\n      )\n\n      if (response.ok) {\n        const data = await response.json()\n        setLikeCount(data.like_count)\n        setLikeStatus(data.liked)\n        console.log(data.liked)\n      } else {\n        throw new Error('네트워크 응답이 좋지 않았습니다.')\n      }\n    } catch (error) {\n      console.log('좋아요를 업데이트하는 동안 에러 발생:', error)\n    }\n  }\n\n  return (\n    <>\n      {/* <PostHeadInfoWrapper> */}\n      {/* <PrevPageIcon onClick={goBackPage}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </PrevPageIcon> */}\n      <HeadWrap>\n        <Title>{title}</Title>\n        <DateWrap>\n          <Information>\n            <Date>{date}</Date>\n            <Separator>·</Separator>\n            {isLoading ? (\n              <View>조회수: </View>\n            ) : (\n              <View>조회수: {viewCount}</View>\n            )}\n          </Information>\n          <Like\n            onClick={handleClick}\n            style={{\n              backgroundColor: likeStatus ? 'rgb(56, 217, 169)' : '',\n              color: likeStatus ? 'var(--button-text)' : 'var(--text3)',\n              borderColor: likeStatus ? 'rgb(56, 217, 169)' : '',\n            }}\n          >\n            <Heartsvg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"currentColor\"\n                d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"\n              ></path>\n            </Heartsvg>\n            <LikeCount>{likeCount}</LikeCount>\n          </Like>\n        </DateWrap>\n        <CateWrap>\n          {Array.isArray(categories) &&\n            categories.map((category, index) => (\n              <Link to={`/?category=${category}`}>\n                <Cate key={index}>\n                  {index > 0}\n                  {category}\n                </Cate>\n              </Link>\n            ))}\n        </CateWrap>\n      </HeadWrap>\n      {/* </PostHeadInfoWrapper> */}\n    </>\n  )\n}\n\nexport default PostHeadInfo\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport Introduction from 'components/Main/Introduction'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  margin-top: 5.5rem;\n  width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 1024px) {\n    margin-top: 2rem;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 1.5rem;\n    width: 100%;\n  }\n`\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: 'relative' }} />\n))`\n  z-index: -1;\n  display: block;\n  margin: 3rem auto;\n  max-width: 100%;\n\n  @media (max-width: 768px) {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n`\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) {\n  return (\n    <>\n      <Introduction />\n      <PostHeadWrapper>\n        <PostHeadInfo title={title} date={date} categories={categories} />\n        <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      </PostHeadWrapper>\n    </>\n  )\n}\n\nexport default PostHead\n","import React, { useEffect, useRef } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { themeState } from '../../recoil/recoil'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'minseok0123/minseok0123.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget = ({ id }: { id: string }) => {\n  const element = useRef<HTMLDivElement>(null)\n  const theme = useRecoilValue(themeState)\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-${theme}`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    // 이전에 생성된 스크립트 엘리먼트 삭제\n    const utterancesWrapper = element.current\n    while (utterancesWrapper.firstChild) {\n      utterancesWrapper.removeChild(utterancesWrapper.firstChild)\n    }\n\n    element.current.appendChild(utterances)\n  }, [theme, id])\n\n  return <UtterancesWrapper ref={element} id={id} />\n}\n\nexport default CommentWidget\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { PostPageItemType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\nimport PostHead from 'components/Post/PostHead'\nimport PostContent from 'components/Post/PostContent'\nimport CommentWidget from 'components/Post/CommentWidget'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0]\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["deselectCurrent","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","HeadWrap","_styled","target","name","styles","Title","DateWrap","Information","Like","Heartsvg","LikeCount","Date","Separator","View","CateWrap","Cate","_ref","title","date","categories","isLoading","setIsLoading","useState","viewCount","setViewCount","likeCount","setLikeCount","likeStatus","setLikeStatus","useEffect","async","pathname","location","decodedValue","decodeURIComponent","response","fetch","encodeURIComponent","method","ok","data","json","view_count","like_count","liked","log","fetchViewCount","___EmotionJSX","React","onClick","backgroundColor","color","borderColor","width","height","viewBox","fill","d","Array","isArray","map","category","index","Link","to","key","PostHeadWrapper","BackgroundImage","props","GatsbyImage","_extends","thumbnail","Introduction","PostHeadInfo","image","alt","UtterancesWrapper","id","element","useRef","theme","useRecoilValue","themeState","current","utterances","attributes","src","repo","label","crossorigin","Object","entries","forEach","_ref2","value","setAttribute","utterancesWrapper","firstChild","ref","allMarkdownRemark","edges","href","node","html","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","Template","description","url","PostHead","PostContent","CommentWidget","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","focus"],"sourceRoot":""}