{"version":3,"file":"41384b3c-9b7c3ad38f30bf03374a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Fuse from 'fuse.js'\nimport { useStaticQuery, graphql, Link, navigate } from 'gatsby'\nimport { FuseResults } from '../types/fuse'\nimport GlobalStyle from 'components/Common/GlobalStyle'\nimport styled from '@emotion/styled'\nimport Introduction from 'components/Main/Introduction'\n\nconst Search: React.FC = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        nodes {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            thumbnail {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            categories\n          }\n          rawMarkdownBody\n        }\n      }\n    }\n  `)\n\n  const [query, setQuery] = useState('')\n  const [searchResults, setSearchResults] = useState<FuseResults>([])\n  const [debouncedQuery, setDebouncedQuery] = useState('')\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedQuery(query)\n    }, 300)\n\n    return () => {\n      clearTimeout(timerId)\n    }\n  }, [query])\n\n  useEffect(() => {\n    const fuse = new Fuse(data.allMarkdownRemark.nodes, {\n      keys: ['frontmatter.title', 'rawMarkdownBody'],\n    })\n\n    const results = fuse.search(debouncedQuery) as unknown as FuseResults\n\n    setSearchResults(results)\n  }, [data, debouncedQuery])\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    const searchQuery = urlParams.get('q')\n    if (searchQuery) {\n      setQuery(searchQuery)\n    }\n  }, [])\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    if (query) {\n      urlParams.set('q', query)\n    } else {\n      urlParams.delete('q')\n    }\n    navigate(`/search/?${urlParams.toString()}`, { replace: true })\n  }, [query])\n\n  return (\n    <div>\n      <Introduction />\n      <title>minlog | 검색</title>\n      <SearchBox>\n        <div>\n          <SearchBoxWrap>\n            <Searchsvg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M13.66 7.36a6.3 6.3 0 1 1-12.598 0 6.3 6.3 0 0 1 12.598 0zm-1.73 5.772a7.36 7.36 0 1 1 1.201-1.201l3.636 3.635c.31.31.31.815 0 1.126l-.075.075a.796.796 0 0 1-1.126 0l-3.636-3.635z\"\n                clip-rule=\"evenodd\"\n                fill=\"currentColor\"\n              ></path>\n            </Searchsvg>\n            <StyledInput\n              type=\"text\"\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n              placeholder=\"검색어를 입력하세요\"\n            />\n          </SearchBoxWrap>\n        </div>\n        {searchResults.length > 0 && (\n          <TotalPost>\n            <p>\n              총 <b>{searchResults.length}개의</b> 포스트를 찾았습니다.\n            </p>\n          </TotalPost>\n        )}\n        {searchResults.length > 0 ? (\n          <div>\n            {searchResults.map(({ item }) => (\n              <ContentsDiv key={item.id}>\n                <Link to={item.fields.slug}>\n                  {item.frontmatter.thumbnail && (\n                    <SumWrap>\n                      <SearchSumnail\n                        src={\n                          item.frontmatter.thumbnail.publicURL ||\n                          item.frontmatter.thumbnail.childImageSharp?.fluid.src\n                        }\n                        alt={item.frontmatter.title}\n                      />\n                    </SumWrap>\n                  )}\n\n                  <ContentsTit>{item.frontmatter.title}</ContentsTit>\n                  <ContentsExcerpt>{item.excerpt}</ContentsExcerpt>\n                  <TagWrap>\n                    <p>\n                      {Array.isArray(item.frontmatter.categories) &&\n                        item.frontmatter.categories.map((category, index) => (\n                          <CateList key={index}>\n                            {index > 0}\n                            {category}\n                          </CateList>\n                        ))}\n                    </p>\n                  </TagWrap>\n                  <ContentsDate>\n                    <p> {item.frontmatter.date}</p>\n                  </ContentsDate>\n                </Link>\n              </ContentsDiv>\n            ))}\n          </div>\n        ) : (\n          debouncedQuery &&\n          searchResults.length === 0 && (\n            <NotFound>검색 결과가 없습니다.</NotFound>\n          )\n        )}\n      </SearchBox>\n      <GlobalStyle />\n    </div>\n  )\n}\n\nexport default Search\n\nexport const SearchBox = styled.div`\n  margin-top: 3.5rem;\n  width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    margin-top: 2rem;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 0.5rem;\n    width: 100%;\n  }\n`\n\nexport const StyledInput = styled.input`\n  font-size: 1.5rem;\n  line-height: 2rem;\n  height: 2rem;\n  transition: all 0.125s ease-in 0s;\n  flex: 1 1 0%;\n  display: block;\n  padding: 0px;\n  border: none;\n  outline: 0px;\n  background: transparent;\n  color: var(--text1);\n  min-width: 0px;\n  font-weight: 400;\n\n  @media (max-width: 768px) {\n    flex: 1 1 0%;\n    font-size: 1.125rem;\n    line-height: 1.5;\n    height: auto;\n  }\n`\n\nexport const SearchBoxWrap = styled.div`\n  margin-bottom: 1.5rem;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  transition: all 0.125s ease-in 0s;\n  cursor: text;\n  border: 1px solid var(--border2);\n  height: 4rem;\n  padding: 0px 1.5rem;\n\n  &:focus-within {\n    border-color: var(--border1);\n  }\n\n  @media (max-width: 768px) {\n    height: 2.25rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`\n\nexport const Searchsvg = styled.svg`\n  width: 1.5rem;\n  height: 1.5rem;\n  margin-right: 1.25rem;\n  @media (max-width: 768px) {\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const TotalPost = styled.div`\n  margin-bottom: 2rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: var(--text2);\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-bottom: 1rem;\n  }\n`\n\nexport const SumWrap = styled.div`\n  padding-top: 52.356%;\n  margin-bottom: 1rem;\n  width: 100%;\n  position: relative;\n`\n\nexport const SearchSumnail = styled.img`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: cover;\n`\nexport const ContentsDiv = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 2rem;\n  line-height: 1.5;\n  border-bottom: 1px solid var(--border4);\n\n  @media (max-width: 768px) {\n    padding-top: 1rem;\n    padding-bottom: 2rem;\n  }\n`\nexport const ContentsTit = styled.h2`\n  font-size: 1.5rem;\n  margin: 0px;\n  color: var(--text1);\n  word-break: keep-all;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nexport const ContentsExcerpt = styled.p`\n  margin-bottom: 2rem;\n  margin-top: 0.5rem;\n  font-size: 1rem;\n  color: var(--text2);\n  word-break: keep-all;\n  overflow-wrap: break-word;\n\n  @media (max-width: 768px) {\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n  }\n`\nexport const TagWrap = styled.div`\n  margin-bottom: -0.875rem;\n\n  width: auto;\n  height: auto;\n\n  @media (max-width: 768px) {\n    margin-bottom: -0.5rem;\n  }\n`\n\nexport const CateList = styled.div`\n  margin-bottom: 0.875rem;\n  background: var(--bg-tag);\n  padding-left: 1rem;\n  padding-right: 1rem;\n  height: 2rem;\n  border-radius: 1rem;\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-right: 0.875rem;\n  color: #12b886;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 1rem;\n\n  @media (max-width: 768px) {\n    height: 1.5rem;\n    font-size: 0.75rem;\n    border-radius: 0.75rem;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n`\nexport const ContentsDate = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-top: 1.5rem;\n  color: var(--text3);\n  font-size: 0.875rem;\n\n  @media (max-width: 768px) {\n    font-size: 0.75rem;\n  }\n`\n\nexport const NotFound = styled.p`\n  margin-bottom: 4rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: var(--text2);\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`\n"],"names":["Search","data","useStaticQuery","query","setQuery","useState","searchResults","setSearchResults","debouncedQuery","setDebouncedQuery","useEffect","timerId","setTimeout","clearTimeout","results","Fuse","allMarkdownRemark","nodes","keys","search","searchQuery","URLSearchParams","window","location","get","urlParams","set","delete","navigate","toString","replace","___EmotionJSX","Introduction","SearchBox","SearchBoxWrap","Searchsvg","width","height","viewBox","d","fill","StyledInput","type","value","onChange","event","target","placeholder","length","TotalPost","map","_ref","_item$frontmatter$thu","item","ContentsDiv","key","id","Link","to","fields","slug","frontmatter","thumbnail","SumWrap","SearchSumnail","src","publicURL","childImageSharp","fluid","alt","title","ContentsTit","ContentsExcerpt","excerpt","TagWrap","Array","isArray","categories","category","index","CateList","ContentsDate","date","NotFound","GlobalStyle","_styled","name","styles"],"sourceRoot":""}