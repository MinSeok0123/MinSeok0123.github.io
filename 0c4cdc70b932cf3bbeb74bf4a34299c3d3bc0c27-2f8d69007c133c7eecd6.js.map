{"version":3,"file":"0c4cdc70b932cf3bbeb74bf4a34299c3d3bc0c27-2f8d69007c133c7eecd6.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Main/ToggleNav.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js"],"sourcesContent":["import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\nimport { PostListItemType } from 'types/PostItem.types'\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: PostListItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n\nexport default useInfiniteScroll\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { PostFrontmatterType } from 'types/PostItem.types'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype PostItemProps = PostFrontmatterType & { link: string }\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 16px 0px;\n  transition: 0.3s box-shadow;\n  transform: translateY(0);\n  transition: transform 0.3s ease-out;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 7px 16px 0px;\n    transform: translateY(-7px);\n    transition-delay: 0s;\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 5px 5px 0 0;\n`\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  background-color: var(--element);\n  border-radius: 5px;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 0.1rem;\n  background: var(--bg-tag);\n  font-size: 14px;\n  font-weight: 500;\n  color: #12b886;\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(item => (\n            <CategoryItem key={item}>{item}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  )\n}\n\nexport default PostItem\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { PostListItemType } from 'types/PostItem.types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport PostItem from 'components/Main/PostItem'\n\ntype PostListProps = {\n  selectedCategory: string\n  posts: PostListItemType[]\n}\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  width: 100%;\n  max-width: 1728px;\n  grid-gap: 30px;\n  margin: 0 auto;\n  padding: 40px 0 100px;\n\n  @media (max-width: 1919px) {\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    width: 1376px;\n  }\n\n  @media (max-width: 1440px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    width: 1024px;\n  }\n\n  @media (max-width: 1056px) {\n    grid-template-columns: 1fr 1fr;\n    width: calc(100% - 2rem);\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: calc(100% - 2rem);\n  }\n`\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  selectedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  \n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        else if (typeof keyframes[i] === \"string\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.8\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { motion } from 'framer-motion'\n\ntype CategoryItemProps = {\n  active: boolean\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode\n  className?: string\n  to: string\n} & CategoryItemProps\n\nexport type CategoryListProps = {\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 192px;\n  position: absolute;\n  top: 45px;\n  left: -100px;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 8px 0px;\n\n  @media (max-width: 768px) {\n    left: -113px;\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  display: flex;\n  align-items: center;\n  min-width: auto;\n  height: 40px;\n\n  background-color: var(--element);\n  padding: 0.75rem 1rem;\n  font-size: 0.875rem;\n  font-weight: ${({ active }) => (active ? '600' : '400')};\n  color: ${({ active }) => (active ? 'var(--velog)' : '#6e6d7a')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  // @media (max-width: 768px) {\n  //   font-size: 15px;\n  // }\n\n  &:hover {\n    background-color: var(--catebg);\n  }\n`\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.3 }}\n      >\n        <CategoryListWrapper>\n          {Object.entries(categoryList).map(([name, count]) => (\n            <CategoryItem\n              to={`${\n                window.sessionStorage.getItem('tense') === '최신'\n                  ? '/recent'\n                  : ''\n              }/?category=${name}`}\n              active={name === selectedCategory}\n              key={name}\n            >\n              {name} ({count})\n            </CategoryItem>\n          ))}\n        </CategoryListWrapper>\n      </motion.div>\n    </>\n  )\n}\n\nexport default CategoryList\n","import styled from '@emotion/styled'\nimport { useEffect } from 'react'\nimport CategoryList from './CategoryList'\nimport {\n  selectedCategoryState,\n  categoryListState,\n  categoryState,\n  activeTabState,\n} from '../../recoil/recoil'\nimport { useRecoilState, useRecoilValue } from 'recoil'\n\nconst ToNav = styled.div`\n  position: relative;\n  margin-top: 1.5rem !important;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 1728px;\n  height: 48px;\n  margin: 0 auto;\n\n  @media (max-width: 1919px) {\n    width: 1376px;\n  }\n\n  @media (max-width: 1440px) {\n    width: 1024px;\n  }\n\n  @media (max-width: 1056px) {\n    width: calc(100% - 2rem);\n  }\n\n  @media (max-width: 768px) {\n    width: calc(100% - 2rem);\n  }\n`\n\nconst TogNav = styled.div`\n  width: 224px;\n  height: 48px;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    width: 160px;\n  }\n`\n\nconst NavItem = styled.div`\n  width: 7rem;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  font-size: 1.125rem;\n  text-decoration: none;\n  height: 3rem;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    width: 5rem;\n  }\n`\n\nconst Icon = styled.div`\n  margin-top: 0.4rem;\n  margin-right: 0.5rem;\n  font-size: 1.5rem;\n\n  @media (max-width: 944px) {\n    font-size: 1.2rem;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n`\n\nconst Category = styled.div`\n  background-color: var(--element);\n  color: var(--category);\n  height: 2rem;\n  width: 6rem;\n  border-radius: 4px;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-weight: 600;\n  font-size: 1.5rem;\n  margin-left: -5px;\n  box-shadow: rgba(0, 0, 0, 0.08) 0px 0px 4px;\n  cursor: pointer;\n\n  @media (max-width: 1024px) {\n    width: 5.25rem;\n    font-size: 1.5rem;\n  }\n`\n\nconst Catename = styled.span`\n  font-size: 0.875rem;\n  @media (max-width: 1024px) {\n    font-size: 0.75rem;\n  }\n`\n\nconst CategoryCon = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 8px;\n  left: 230px;\n\n  @media (max-width: 768px) {\n    left: 165px;\n  }\n`\n\nconst Underline = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 2px;\n  bottom: 0px;\n  background: var(--border1);\n`\n\nexport default function ToggleNav() {\n  const [activeTab, setActiveTab] = useRecoilState(activeTabState)\n\n  const handleTabClick = (tabName: string) => {\n    setActiveTab(tabName)\n    if (typeof window !== 'undefined') {\n      sessionStorage.setItem('tense', tabName === '트렌딩' ? '트렌딩' : '최신')\n    }\n  }\n\n  useEffect(() => {\n    const savedTab = sessionStorage.getItem('tense')\n    if (savedTab === '트렌딩' || savedTab === '최신') {\n      setActiveTab(savedTab)\n    }\n    if (sessionStorage.getItem('category')) {\n      sessionStorage.setItem('category', 'close')\n    }\n  }, [])\n\n  const selectedCategory = useRecoilValue(selectedCategoryState)\n  const categoryList = useRecoilValue(categoryListState)\n\n  console.log(categoryList)\n  console.log(selectedCategory)\n\n  const [category, setCategory] = useRecoilState(categoryState)\n\n  const handleClick = () => {\n    setCategory(category === 'open' ? 'close' : 'open')\n  }\n\n  return (\n    <ToNav>\n      <TogNav>\n        <a href=\"/\">\n          <NavItem\n            className={activeTab === '트렌딩' ? 'active' : ''}\n            onClick={() => handleTabClick('트렌딩')}\n            style={{\n              color:\n                activeTab === '트렌딩' ? 'var( --tenseactiv)' : 'var( --tense)',\n            }}\n          >\n            <Icon>\n              <svg\n                stroke=\"currentColor\"\n                fill=\"currentColor\"\n                stroke-width=\"0\"\n                viewBox=\"0 0 24 24\"\n                height=\"1em\"\n                width=\"1em\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"></path>\n              </svg>\n            </Icon>\n            <span>트렌딩</span>\n          </NavItem>\n        </a>\n        <a href=\"/recent\">\n          <NavItem\n            className={activeTab === '최신' ? 'active' : ''}\n            onClick={() => handleTabClick('최신')}\n            style={{\n              color:\n                activeTab === '최신' ? 'var( --tenseactiv)' : 'var( --tense)',\n            }}\n          >\n            <Icon>\n              <svg\n                stroke=\"currentColor\"\n                fill=\"currentColor\"\n                stroke-width=\"0\"\n                viewBox=\"0 0 24 24\"\n                height=\"1em\"\n                width=\"1em\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\"></path>\n              </svg>\n            </Icon>\n            <span>최신</span>\n          </NavItem>\n        </a>\n        <Underline\n          style={{\n            left: activeTab === '트렌딩' ? '0%' : '50%',\n          }}\n        />\n        <CategoryCon onClick={handleClick}>\n          <Category>\n            <Catename>{String(selectedCategory)}</Catename>\n            <svg\n              stroke=\"currentColor\"\n              fill=\"currentColor\"\n              stroke-width=\"0\"\n              viewBox=\"0 0 24 24\"\n              height=\"1em\"\n              width=\"1em\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M7 10l5 5 5-5z\"></path>\n            </svg>\n          </Category>\n          {category === 'open' && (\n            <CategoryList\n              categoryList={categoryList}\n              selectedCategory={selectedCategory}\n            />\n          )}\n        </CategoryCon>\n      </TogNav>\n      <Menu>\n        <svg\n          stroke=\"currentColor\"\n          fill=\"currentColor\"\n          stroke-width=\"0\"\n          viewBox=\"0 0 24 24\"\n          height=\"1.5em\"\n          width=\"1.5em\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"></path>\n        </svg>\n      </Menu>\n    </ToNav>\n  )\n}\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["selectedCategory","posts","containerRef","useRef","observer","count","setCount","useState","postListByCategory","useMemo","filter","_ref","node","frontmatter","categories","includes","useEffect","current","IntersectionObserver","entries","isIntersecting","value","unobserve","target","length","children","observe","postList","slice","PostItemWrapper","_styled","Link","name","styles","ThumbnailImage","GatsbyImage","PostItemContent","Title","Date","Category","CategoryItem","Summary","title","date","summary","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","to","image","alt","map","item","key","PostListWrapper","useInfiniteScroll","ref","_ref2","id","fields","slug","PostItem","_extends","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","CategoryListWrapper","active","_ref3","_ref4","categoryList","React","div","_ref5","sessionStorage","getItem","ToNav","TogNav","NavItem","Icon","Menu","Catename","CategoryCon","Underline","ToggleNav","activeTab","setActiveTab","useRecoilState","activeTabState","handleTabClick","tabName","setItem","savedTab","useRecoilValue","selectedCategoryState","categoryListState","console","log","category","setCategory","categoryState","href","className","onClick","xmlns","handleClick","String","CategoryList","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","concat","decode","tokens","decodeUriComponent","encodedURI","TypeError","replaceMap","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","includeKeys","object","predicate","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","strictUriEncode","encodeURIComponent","charCodeAt","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","keysSorter","removeHash","hashStart","parseValue","parseNumbers","parseBooleans","extract","queryStart","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}