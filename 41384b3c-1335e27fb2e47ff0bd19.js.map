{"version":3,"file":"41384b3c-1335e27fb2e47ff0bd19.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Fuse from 'fuse.js'\nimport { useStaticQuery, graphql, Link, navigate } from 'gatsby'\nimport { FuseResults } from '../types/fuse'\nimport GlobalStyle from 'components/Common/GlobalStyle'\nimport styled from '@emotion/styled'\n\nconst Search: React.FC = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        nodes {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            thumbnail {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            categories\n          }\n          rawMarkdownBody\n        }\n      }\n    }\n  `)\n\n  const [query, setQuery] = useState('')\n  const [searchResults, setSearchResults] = useState<FuseResults>([])\n\n  useEffect(() => {\n    const fuse = new Fuse(data.allMarkdownRemark.nodes, {\n      keys: ['frontmatter.title', 'rawMarkdownBody'],\n    })\n\n    const results = fuse.search(query) as unknown as FuseResults\n\n    setSearchResults(results)\n  }, [data, query])\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    const searchQuery = urlParams.get('q')\n    if (searchQuery) {\n      setQuery(searchQuery)\n    }\n  }, [])\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    if (query) {\n      urlParams.set('q', query)\n    } else {\n      urlParams.delete('q')\n    }\n    navigate(`/search/?${urlParams.toString()}`, { replace: true })\n  }, [query])\n\n  return (\n    <div>\n      <SearchWrap>\n        <SearchBox>\n          <SearchBoxWrap>\n            <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M13.66 7.36a6.3 6.3 0 1 1-12.598 0 6.3 6.3 0 0 1 12.598 0zm-1.73 5.772a7.36 7.36 0 1 1 1.201-1.201l3.636 3.635c.31.31.31.815 0 1.126l-.075.075a.796.796 0 0 1-1.126 0l-3.636-3.635z\"\n                clip-rule=\"evenodd\"\n                fill=\"currentColor\"\n              ></path>\n            </svg>\n            <StyledInput\n              type=\"text\"\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n              placeholder=\"검색어를 입력하세요\"\n            />\n          </SearchBoxWrap>\n\n          {searchResults.length > 0 && (\n            <TotalPost>\n              총 <b>{searchResults.length}</b>개의 포스트를 찾았습니다.\n            </TotalPost>\n          )}\n          {searchResults.length > 0 ? (\n            <div>\n              {searchResults.map(({ item }) => (\n                <ContentsDiv key={item.id}>\n                  <Link to={item.fields.slug}>\n                    {item.frontmatter.thumbnail && (\n                      <SumWrap>\n                        <SearchSumnail\n                          src={\n                            item.frontmatter.thumbnail.publicURL ||\n                            item.frontmatter.thumbnail.childImageSharp?.fluid\n                              .src\n                          }\n                          alt={item.frontmatter.title}\n                        />\n                      </SumWrap>\n                    )}\n                    <div>\n                      <ContentsTit>{item.frontmatter.title}</ContentsTit>\n                      <ContentsExcerpt>{item.excerpt}</ContentsExcerpt>\n                      <TagWrap>\n                        <p>\n                          {Array.isArray(item.frontmatter.categories) &&\n                            item.frontmatter.categories.map(\n                              (category, index) => (\n                                <CateList key={index}>\n                                  {index > 0}\n                                  {category}\n                                </CateList>\n                              ),\n                            )}\n                        </p>\n                      </TagWrap>\n                      <ContentsDate>\n                        <p> {item.frontmatter.date}</p>\n                      </ContentsDate>\n                    </div>\n                  </Link>\n                </ContentsDiv>\n              ))}\n            </div>\n          ) : (\n            query && <NotFound>검색 결과가 없습니다.</NotFound>\n          )}\n        </SearchBox>\n        <GlobalStyle />\n      </SearchWrap>\n    </div>\n  )\n}\n\nexport default Search\n\nexport const StyledInput = styled.input`\n  margin-left: 1.25rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n  height: 2rem;\n  transition: all 0.125s ease-in 0s;\n  flex: 1 1 0%;\n  display: block;\n  padding: 0px;\n  border: none;\n  outline: 0px;\n  background: transparent;\n  color: colorf;\n  min-width: 0px;\n`\n\nexport const SearchWrap = styled.main`\n  height: 100%;\n  display: flex;\n\n  flex-direction: column;\n`\n\nexport const SearchBox = styled.div`\n  margin-top: 3.5rem;\n  width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    margin-top: 2rem;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 0.5rem;\n    width: 100%;\n  }\n`\n\nexport const SearchBoxWrap = styled.div`\n  margin-bottom: 1.5rem;\n  display: flex;\n  border: 1px solid #a0a0a0;\n  -webkit-box-align: center;\n  align-items: center;\n  transition: all 0.125s ease-in 0s;\n  cursor: text;\n  height: 4rem;\n  padding: 0px 1.5rem;\n\n  @media (max-width: 768px) {\n    height: 2.25rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`\n\nexport const TotalPost = styled.a`\n  margin-bottom: 4rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: #495057;\n`\n// export const SearchContents = styled.div`\n//   padding-top: 0px;\n//   padding-bottom: 4rem;\n//   line-height: 1.5;\n//   width: 768px;\n\n//   @media (max-width: 1024px) {\n//     padding-left: 1rem;\n//     padding-right: 1rem;\n//     margin-top: 2rem;\n//   }\n// `\n\nexport const SumWrap = styled.div`\n  padding-top: 52.356%;\n  margin-bottom: 1rem;\n  width: 100%;\n  position: relative;\n`\n\nexport const SearchSumnail = styled.img`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: cover;\n`\nexport const ContentsDiv = styled.div`\n  padding-top: 4rem;\n  padding-bottom: 4rem;\n  line-height: 1.5;\n  border-bottom: 1px solid #f1f3f5;\n`\nexport const ContentsTit = styled.h2`\n  font-size: 1.5rem;\n  margin: 0px;\n  color: #212529;\n  word-break: keep-all;\n`\n\nexport const ContentsExcerpt = styled.p`\n  margin-bottom: 2rem;\n  margin-top: 0.5rem;\n  font-size: 1rem;\n  color: #495057;\n  word-break: keep-all;\n  overflow-wrap: break-word;\n`\nexport const TagWrap = styled.div`\n  margin-bottom: -0.875rem;\n  width: 768px;\n  height: 46px;\n`\n\nexport const CateList = styled.div`\n  margin-bottom: 0.875rem;\n  background: #f8f9fa;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  height: 2rem;\n  border-radius: 1rem;\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-right: 0.875rem;\n  color: #12b886;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 1rem;\n`\nexport const ContentsDate = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-top: 1.5rem;\n  color: #868e96;\n  font-size: 0.875rem;\n`\n\nexport const NotFound = styled.p`\n  margin-bottom: 4rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: #495057;\n`\n"],"names":["Search","data","useStaticQuery","query","setQuery","useState","searchResults","setSearchResults","useEffect","results","Fuse","allMarkdownRemark","nodes","keys","search","searchQuery","URLSearchParams","window","location","get","urlParams","set","delete","navigate","toString","replace","___EmotionJSX","SearchWrap","SearchBox","SearchBoxWrap","width","height","viewBox","d","fill","StyledInput","type","value","onChange","event","target","placeholder","length","TotalPost","map","_ref","_item$frontmatter$thu","item","ContentsDiv","key","id","Link","to","fields","slug","frontmatter","thumbnail","SumWrap","SearchSumnail","src","publicURL","childImageSharp","fluid","alt","title","ContentsTit","ContentsExcerpt","excerpt","TagWrap","Array","isArray","categories","category","index","CateList","ContentsDate","date","NotFound","GlobalStyle","_styled","name","styles"],"sourceRoot":""}