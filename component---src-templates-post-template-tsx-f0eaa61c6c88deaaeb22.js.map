{"version":3,"file":"component---src-templates-post-template-tsx-f0eaa61c6c88deaaeb22.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'gatsby'\n\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n}\n\n// const PostHeadInfoWrapper = styled.div`\n//   margin-top: 5.5rem;\n//   width: 768px;\n//   margin-left: auto;\n//   margin-right: auto;\n\n//   @media (max-width: 768px) {\n//     width: 100%;\n//     padding: 40px 20px;\n//   }\n// `\n\n// const PrevPageIcon = styled.div`\n//   display: grid;\n//   place-items: center;\n//   width: 40px;\n//   height: 40px;\n//   border-radius: 50%;\n//   background: #ffffff;\n//   color: #000000;\n//   font-size: 22px;\n//   cursor: pointer;\n//   box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n//   @media (max-width: 768px) {\n//     width: 30px;\n//     height: 30px;\n//     font-size: 18px;\n//   }\n// `\n\nconst HeadWrap = styled.div`\n  @media (max-width: 1024px) {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  line-height: 1.5;\n  letter-spacing: -0.004em;\n  margin-top: 0px;\n  font-weight: 800;\n  color: var(--text1);\n  margin-bottom: 2rem;\n  word-break: keep-all;\n  transition: color 0.125s ease-in 0s;\n\n  @media (max-width: 1024px) {\n    font-size: 2.25rem;\n  }\n`\n\nconst DateWrap = styled.div`\n  -webkit-box-align: center;\n  align-items: center;\n  font-size: 1rem;\n  color: var(--text2);\n  display: flex;\n  -webkit-box-pack: justify;\n\n  @media (max-width: 768px) {\n    margin-bottom: 0.75rem;\n  }\n`\n\nconst Date = styled.span`\n  color: var(--text2);\n`\n\nconst CateWrap = styled.div`\n  margin-top: 0.875rem;\n  margin-bottom: -0.875rem;\n  min-height: 0.875rem;\n\n  @media (max-width: 768px) {\n    margin-top: 0.5rem;\n    margin-bottom: -0.5rem;\n    min-height: 0.5rem;\n  }\n`\n\nconst Cate = styled.div`\n  margin-bottom: 0.875rem;\n  background: var(--bg-tag);\n  padding-left: 1rem;\n  padding-right: 1rem;\n  height: 2rem;\n  border-radius: 1rem;\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  margin-right: 0.875rem;\n  color: var(--velog);\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 1rem;\n\n  @media (max-width: 768px) {\n    height: 1.5rem;\n    font-size: 0.75rem;\n    border-radius: 0.75rem;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  // const goBackPage = () => window.history.back()\n\n  return (\n    <>\n      {/* <PostHeadInfoWrapper> */}\n      {/* <PrevPageIcon onClick={goBackPage}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </PrevPageIcon> */}\n      <HeadWrap>\n        <Title>{title}</Title>\n        <DateWrap>\n          <Date>{date}</Date>\n        </DateWrap>\n        <CateWrap>\n          {Array.isArray(categories) &&\n            categories.map((category, index) => (\n              <Link to={`/?category=${category}`}>\n                <Cate key={index}>\n                  {index > 0}\n                  {category}\n                </Cate>\n              </Link>\n            ))}\n        </CateWrap>\n      </HeadWrap>\n      {/* </PostHeadInfoWrapper> */}\n    </>\n  )\n}\n\nexport default PostHeadInfo\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport Introduction from 'components/Main/Introduction'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  margin-top: 5.5rem;\n  width: 768px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 1024px) {\n    margin-top: 2rem;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 1.5rem;\n    width: 100%;\n  }\n`\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: 'relative' }} />\n))`\n  z-index: -1;\n  display: block;\n  margin: 3rem auto;\n  max-width: 100%;\n\n  @media (max-width: 768px) {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n`\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) {\n  return (\n    <>\n      <Introduction />\n      <PostHeadWrapper>\n        <PostHeadInfo title={title} date={date} categories={categories} />\n        <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      </PostHeadWrapper>\n    </>\n  )\n}\n\nexport default PostHead\n","import React, { FunctionComponent, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\ntype PostContentProps = {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 10px 0;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  img {\n    display: block;\n    margin: 3rem auto;\n    max-width: 100%;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n\n    @media (max-width: 768px) {\n      margin-bottom: 10px;\n    }\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n\n    @media (max-width: 768px) {\n      margin-top: 30px;\n    }\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 2rem 0px;\n    border-left: 4px solid var(--velog);\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    background: var(--bg-element2);\n    padding: 1rem 1rem 1rem 2rem;\n    color: var(--text1);\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid var(--hr);\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    @media (max-width: 768px) {\n      font-size: 0.75rem;\n      margin: 20px 0;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n    background: var(--prism-bg);\n    color: var(--prism-default-text);\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nconst TocWrapper = styled.div`\n  position: fixed;\n  top: calc(35% + 20px);\n  right: calc((100vw - 728px) / 2 - 340px);\n  width: 240px;\n  overflow: hidden auto;\n  padding: 0.25rem 0.75rem;\n  line-height: 1.5;\n  border-left: 2px solid var(--border4);\n  color: var(--text3);\n  max-height: calc(100vh - 128px);\n  font-size: 0.875rem;\n\n  @media (max-width: 1500px) {\n    right: calc((100vw - 728px) / 2 - 280px);\n  }\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n\n  a:hover {\n    color: var(--text1);\n  }\n\n  div {\n    display: block;\n    transition: all 0.125s ease-in 0s;\n  }\n\n  .toc-level-1 {\n    margin-left: 0;\n  }\n  .toc-level-2 {\n    margin-top: 4px;\n    margin-left: 12px;\n  }\n  .toc-level-3 {\n    margin-top: 4px;\n    margin-left: 24px;\n  }\n`\n\ntype TocProps = {\n  headings: Array<{ id: string; text: string; level: number }>\n}\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  const [headings, setHeadings] = React.useState<\n    Array<{ id: string; text: string; level: number }>\n  >([])\n\n  useEffect(() => {\n    const headingElements = document.querySelectorAll(\n      '.markdown-body h1, .markdown-body h2, .markdown-body h3',\n    )\n    const headings = Array.from(headingElements).map(headingElement => ({\n      id: headingElement.getAttribute('id') || '',\n      text: headingElement.textContent || '',\n      level: Number(headingElement.tagName.charAt(1)),\n    }))\n    setHeadings(headings)\n  }, [])\n\n  return (\n    <>\n      <Toc headings={headings} />\n      <MarkdownRenderer\n        className=\"markdown-body\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </>\n  )\n}\n\nconst Toc: FunctionComponent<TocProps> = ({ headings }) => {\n  const [activeIndex, setActiveIndex] = useState<number | null>(null)\n\n  useEffect(() => {\n    function handleScroll() {\n      const scrollTop =\n        document.documentElement.scrollTop || document.body.scrollTop\n\n      const headingElements = document.querySelectorAll(\n        '.markdown-body h1, .markdown-body h2, .markdown-body h3',\n      )\n      const headingOffsets = Array.from(headingElements).map(headingElement => {\n        const elementTop =\n          headingElement.getBoundingClientRect().top + scrollTop\n        const headingId = headingElement.getAttribute('id') || ''\n        return { top: elementTop, id: headingId }\n      })\n\n      const index = headingOffsets.findIndex(({ top }) => top > scrollTop + 80)\n      if (index === -1) {\n        setActiveIndex(headingOffsets.length - 1)\n      } else if (index > 0) {\n        setActiveIndex(index - 1)\n      } else {\n        setActiveIndex(null)\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    handleScroll()\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  return (\n    <TocWrapper>\n      {headings.map((heading, index) => (\n        <div\n          key={heading.id}\n          className={`toc-level-${heading.level}`}\n          style={{\n            ...(index === activeIndex && {\n              transform: 'scale(1.05)',\n              display: 'block',\n              transition: 'all 0.125s ease-in 0s',\n              color: 'var(--text1)',\n            }),\n          }} // 클래스 이름에 레벨 정보를 추가\n        >\n          <a href={`#${heading.id}`}>{heading.text}</a>\n        </div>\n      ))}\n    </TocWrapper>\n  )\n}\n\nexport default PostContent\n","import React, { useEffect, useRef } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { themeState } from '../../recoil/recoil'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'minseok0123/minseok0123.github.io' // 자신 계정의 레포지토리로 설정\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n}\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget = ({ id }: { id: string }) => {\n  const element = useRef<HTMLDivElement>(null)\n  const theme = useRecoilValue(themeState)\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const utterances: HTMLScriptElement = document.createElement('script')\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-${theme}`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    // 이전에 생성된 스크립트 엘리먼트 삭제\n    const utterancesWrapper = element.current\n    while (utterancesWrapper.firstChild) {\n      utterancesWrapper.removeChild(utterancesWrapper.firstChild)\n    }\n\n    element.current.appendChild(utterances)\n  }, [theme, id])\n\n  return <UtterancesWrapper ref={element} id={id} />\n}\n\nexport default CommentWidget\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { PostPageItemType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\nimport PostHead from 'components/Post/PostHead'\nimport PostContent from 'components/Post/PostContent'\nimport CommentWidget from 'components/Post/CommentWidget'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0]\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["HeadWrap","_styled","target","name","styles","Title","DateWrap","Date","CateWrap","Cate","_ref","title","date","categories","___EmotionJSX","React","Array","isArray","map","category","index","Link","to","key","PostHeadWrapper","BackgroundImage","props","GatsbyImage","_extends","style","position","thumbnail","Introduction","PostHeadInfo","image","alt","MarkdownRenderer","TocWrapper","Toc","_ref2","headings","activeIndex","setActiveIndex","useState","useEffect","handleScroll","scrollTop","document","documentElement","body","headingElements","querySelectorAll","headingOffsets","from","headingElement","top","getBoundingClientRect","id","getAttribute","findIndex","_ref3","length","window","addEventListener","removeEventListener","heading","className","level","transform","display","transition","color","href","text","html","setHeadings","textContent","Number","tagName","charAt","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","useRef","theme","useRecoilValue","themeState","current","utterances","createElement","attributes","src","repo","label","crossorigin","async","Object","entries","forEach","value","setAttribute","utterancesWrapper","firstChild","removeChild","appendChild","ref","data","allMarkdownRemark","edges","location","node","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","Template","description","url","PostHead","PostContent","CommentWidget"],"sourceRoot":""}