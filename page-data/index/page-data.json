{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"minlog","description":"개발 블로그 minlog 입니다.","siteUrl":"https://minseok0123.github.io"}},"allMarkdownRemark":{"edges":[{"node":{"id":"a99447dc-9148-5a1b-b10a-714d9622f8b3","fields":{"slug":"/아두이노 스마트 쓰레기통/"},"frontmatter":{"title":"아두이노 스마트 쓰레기통","summary":"일상생활에서 가장 많이 사용하는 쓰레기통은 매우 중요한 용도를 가지고 있습니다. 하지만 쓰레기통이 너무 지저분하거나 차있어서 쓰레기를 버리는 것이 불편한 경우가 있습니다. 이러한 문제점을 해결하기 위해 아두이노를 이용한 스마트 쓰레기통을 만들어보았습니다.","date":"2021.10.14","categories":["아두이노","임베디드"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#089898","images":{"fallback":{"src":"/static/6fa610f8862c87b1846b866a818c88df/ab163/arduino.png","srcSet":"/static/6fa610f8862c87b1846b866a818c88df/813cd/arduino.png 192w,\n/static/6fa610f8862c87b1846b866a818c88df/24c40/arduino.png 384w,\n/static/6fa610f8862c87b1846b866a818c88df/ab163/arduino.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/6fa610f8862c87b1846b866a818c88df/23244/arduino.webp 192w,\n/static/6fa610f8862c87b1846b866a818c88df/d4e33/arduino.webp 384w,\n/static/6fa610f8862c87b1846b866a818c88df/88eeb/arduino.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"8d3dbfa5-b2c0-5cf5-9607-2eb30a58de2c","fields":{"slug":"/ESP8266으로 만든 스마트팜/"},"frontmatter":{"title":"ESP8266으로 만든 스마트팜","summary":"하드웨어와 소프트웨어로 완벽한 식물을 기른다.","date":"2021.10.19","categories":["임베디드","아두이노","ESP8266"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ffd913ea2c0d67b777d7e1310e8ad91e/ab163/gb.png","srcSet":"/static/ffd913ea2c0d67b777d7e1310e8ad91e/813cd/gb.png 192w,\n/static/ffd913ea2c0d67b777d7e1310e8ad91e/24c40/gb.png 384w,\n/static/ffd913ea2c0d67b777d7e1310e8ad91e/ab163/gb.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/ffd913ea2c0d67b777d7e1310e8ad91e/23244/gb.webp 192w,\n/static/ffd913ea2c0d67b777d7e1310e8ad91e/d4e33/gb.webp 384w,\n/static/ffd913ea2c0d67b777d7e1310e8ad91e/88eeb/gb.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"43ff11f6-1f8d-5d67-affe-7828935f8dd6","fields":{"slug":"/Java Collection Framework에 대해 알아보자/"},"frontmatter":{"title":"Java Collection Framework에 대해 알아보자","summary":"Java Collection Framework는 자바에서 제공하는 데이터 구조와 관련된 클래스와 인터페이스의 집합이다. 이것은 다양한 자료구조의 구현을 제공하고, 컬렉션 클래스를 사용하여 데이터를 저장, 검색, 정렬, 삭제 등 다양한 연산을 수행할 수 있다. 여기서는 컬렉션 프레임워크의 중요한 두 가지 클래스인 ArrayList와 HashMap에 대해 알아보겠다.","date":"2023.03.29","categories":["Java"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#0888c8","images":{"fallback":{"src":"/static/3aa370900eed0712859f2bc47d4b807e/ab163/java.png","srcSet":"/static/3aa370900eed0712859f2bc47d4b807e/813cd/java.png 192w,\n/static/3aa370900eed0712859f2bc47d4b807e/24c40/java.png 384w,\n/static/3aa370900eed0712859f2bc47d4b807e/ab163/java.png 768w,\n/static/3aa370900eed0712859f2bc47d4b807e/d302d/java.png 1536w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/3aa370900eed0712859f2bc47d4b807e/23244/java.webp 192w,\n/static/3aa370900eed0712859f2bc47d4b807e/d4e33/java.webp 384w,\n/static/3aa370900eed0712859f2bc47d4b807e/88eeb/java.webp 768w,\n/static/3aa370900eed0712859f2bc47d4b807e/f80f8/java.webp 1536w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"43e5fe65-95f9-5606-bd24-45463e65e210","fields":{"slug":"/리액트props/"},"frontmatter":{"title":"리액트 props 사용하는 이유","summary":"리액트는 UI 라이브러리로서, 컴포넌트를 사용하여 UI를 구성한다. 이 때, 컴포넌트 간의 데이터 전달을 위해 프로퍼티(Props)를 사용해야한다.","date":"2023.04.11","categories":["Web","React"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#68e8f8","images":{"fallback":{"src":"/static/08313e5f3a1c429de915af9fa1ccfeaa/ab163/1.png","srcSet":"/static/08313e5f3a1c429de915af9fa1ccfeaa/813cd/1.png 192w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/24c40/1.png 384w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/ab163/1.png 768w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/d302d/1.png 1536w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/08313e5f3a1c429de915af9fa1ccfeaa/23244/1.webp 192w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/d4e33/1.webp 384w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/88eeb/1.webp 768w,\n/static/08313e5f3a1c429de915af9fa1ccfeaa/f80f8/1.webp 1536w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"fec65332-50ca-555c-8362-439ad33e3857","fields":{"slug":"/diff-svc 음성파일 (전처리)만드는 법/"},"frontmatter":{"title":"diff-svc 음성파일 (전처리)만드는 법","summary":"PyDub 라이브러리를 사용하여 음성 파일을 자동으로 분리하고 무음을 제거하는 Python 코드입니다. diff-svc 음성파일을 더 쉽게 만들기 위해 제작하였습니다.","date":"2023.04.21","categories":["Python","diff-svc"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/84fafe303a969987ed1f8a59457a80e6/ab163/diffsvc.png","srcSet":"/static/84fafe303a969987ed1f8a59457a80e6/813cd/diffsvc.png 192w,\n/static/84fafe303a969987ed1f8a59457a80e6/24c40/diffsvc.png 384w,\n/static/84fafe303a969987ed1f8a59457a80e6/ab163/diffsvc.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/84fafe303a969987ed1f8a59457a80e6/23244/diffsvc.webp 192w,\n/static/84fafe303a969987ed1f8a59457a80e6/d4e33/diffsvc.webp 384w,\n/static/84fafe303a969987ed1f8a59457a80e6/88eeb/diffsvc.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"813d4b3a-2e13-5f1c-994c-6428fb76781b","fields":{"slug":"/recoil을 한번 알아보자/"},"frontmatter":{"title":"recoil을 한번 알아보자","summary":"Recoil은 페이스북에서 만든 React 상태 관리 라이브러리입니다. React는 기본적으로 단방향 데이터 흐름을 따르기 때문에 복잡한 상태 관리를 위해서는 상태를 끌어올리거나 Redux와 같은 상태 관리 라이브러리를 사용해야 했습니다. 하지만 Recoil은 기존 React 컴포넌트 내에서 상태를 관리할 수 있도록 해줍니다.","date":"2023.04.21","categories":["Web","Frontend","React"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8e8f8","images":{"fallback":{"src":"/static/99c93761c35cacaf0b3380b23024878f/7bb3b/recoil.png","srcSet":"/static/99c93761c35cacaf0b3380b23024878f/adcc1/recoil.png 168w,\n/static/99c93761c35cacaf0b3380b23024878f/df365/recoil.png 336w,\n/static/99c93761c35cacaf0b3380b23024878f/7bb3b/recoil.png 672w","sizes":"(min-width: 672px) 672px, 100vw"},"sources":[{"srcSet":"/static/99c93761c35cacaf0b3380b23024878f/8571c/recoil.webp 168w,\n/static/99c93761c35cacaf0b3380b23024878f/386a6/recoil.webp 336w,\n/static/99c93761c35cacaf0b3380b23024878f/2fb81/recoil.webp 672w","type":"image/webp","sizes":"(min-width: 672px) 672px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"8c0f6337-037a-5f8f-96a9-db46ceccf70e","fields":{"slug":"/ESP8266에 관하여/"},"frontmatter":{"title":"ESP8266에 관하여","summary":"ESP8266은 Wi-Fi 모듈로, 저렴하고 매우 강력한 기능을 가지고 있습니다. 이 모듈은 고성능 마이크로컨트롤러와 Wi-Fi 기능을 하나의 칩에 통합한 것입니다. ESP8266 모듈은 TCP/IP 스택을 내장하여 인터넷에 직접 연결할 수 있으며, Wi-Fi로 인터넷 연결을 지원합니다.","date":"2023.04.30","categories":["ESP8266","Arduino","임베디드"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/17e9e1bda5eeb18bdf00ffb03a9c155b/ab163/esp8266.png","srcSet":"/static/17e9e1bda5eeb18bdf00ffb03a9c155b/813cd/esp8266.png 192w,\n/static/17e9e1bda5eeb18bdf00ffb03a9c155b/24c40/esp8266.png 384w,\n/static/17e9e1bda5eeb18bdf00ffb03a9c155b/ab163/esp8266.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/17e9e1bda5eeb18bdf00ffb03a9c155b/23244/esp8266.webp 192w,\n/static/17e9e1bda5eeb18bdf00ffb03a9c155b/d4e33/esp8266.webp 384w,\n/static/17e9e1bda5eeb18bdf00ffb03a9c155b/88eeb/esp8266.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"0a474589-ef01-5bd6-8fd2-1bd5bee90474","fields":{"slug":"/그리디 알고리즘/"},"frontmatter":{"title":"그리디 알고리즘","summary":"그리디 알고리즘(탐욕법)은 현재 상황에서 지금 당장 좋은 것만 고르는 방법을 의미한다.","date":"2023.05.11","categories":["알고리즘","C"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#585858","images":{"fallback":{"src":"/static/cdd912ffc0119bc7769fc61a1db10078/88eeb/greedy.webp","srcSet":"/static/cdd912ffc0119bc7769fc61a1db10078/23244/greedy.webp 192w,\n/static/cdd912ffc0119bc7769fc61a1db10078/d4e33/greedy.webp 384w,\n/static/cdd912ffc0119bc7769fc61a1db10078/88eeb/greedy.webp 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[]},"width":768,"height":400}}}}}},{"node":{"id":"d3342002-e371-5bb7-ab44-e71983320c31","fields":{"slug":"/시뮬레이션과 완전탐색/"},"frontmatter":{"title":"시뮬레이션과 완전탐색","summary":"시뮬레이션과 완전탐색은 CS에서 중요한 개념으로, 다양한 문제를 해결하기 위해 사용된다. 시뮬레이션과 완전탐색에 대해 알아보고, 각각의 개념을 어떻게 활용하는지 알아보자.","date":"2023.05.12","categories":["알고리즘","Python"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#185858","images":{"fallback":{"src":"/static/cc3ebf5b6a941408a03a690e03ec3a5f/fc5bd/simulation.png","srcSet":"/static/cc3ebf5b6a941408a03a690e03ec3a5f/f41aa/simulation.png 128w,\n/static/cc3ebf5b6a941408a03a690e03ec3a5f/ca79d/simulation.png 256w,\n/static/cc3ebf5b6a941408a03a690e03ec3a5f/fc5bd/simulation.png 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/cc3ebf5b6a941408a03a690e03ec3a5f/401ed/simulation.webp 128w,\n/static/cc3ebf5b6a941408a03a690e03ec3a5f/48abc/simulation.webp 256w,\n/static/cc3ebf5b6a941408a03a690e03ec3a5f/5bad8/simulation.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":768,"height":400.5}}}}}},{"node":{"id":"9b1e6592-e940-54e4-b31b-7301ae1998b8","fields":{"slug":"/정렬 알고리즘/"},"frontmatter":{"title":"정렬 알고리즘","summary":"정렬 알고리즘은 주어진 데이터 집합을 특정한 기준에 따라 순서대로 정렬하는 알고리즘이다.","date":"2023.05.13","categories":["알고리즘","Python"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/eb51d20db908fb423189b6c6fe7e937c/a28f3/sort.jpg","srcSet":"/static/eb51d20db908fb423189b6c6fe7e937c/10e28/sort.jpg 192w,\n/static/eb51d20db908fb423189b6c6fe7e937c/c620e/sort.jpg 384w,\n/static/eb51d20db908fb423189b6c6fe7e937c/a28f3/sort.jpg 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/eb51d20db908fb423189b6c6fe7e937c/23244/sort.webp 192w,\n/static/eb51d20db908fb423189b6c6fe7e937c/d4e33/sort.webp 384w,\n/static/eb51d20db908fb423189b6c6fe7e937c/88eeb/sort.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"07549a5f-1215-5908-b0ce-13d89002a299","fields":{"slug":"/DFS와 BFS/"},"frontmatter":{"title":"DFS와 BFS","summary":"루트 노드(혹은 다른 임의의 노드)에서 시작해서 다음 분기(branch)로 넘어가기 전에 해당 분기를 완벽하게 탐색하고 넘어가는 방법.넓게(wide) 탐색하기 전에 깊게(deep) 탐색한다.모든 노드를 방문 하고자 하는 경우에 이 방법을 사용한다.","date":"2023.05.15","categories":["알고리즘","Python"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/b8ff6dc0a1e900b190c9d40910300f12/ab163/DFS%20AND%20BFS.png","srcSet":"/static/b8ff6dc0a1e900b190c9d40910300f12/813cd/DFS%20AND%20BFS.png 192w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/24c40/DFS%20AND%20BFS.png 384w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/ab163/DFS%20AND%20BFS.png 768w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/d302d/DFS%20AND%20BFS.png 1536w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/b8ff6dc0a1e900b190c9d40910300f12/23244/DFS%20AND%20BFS.webp 192w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/d4e33/DFS%20AND%20BFS.webp 384w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/88eeb/DFS%20AND%20BFS.webp 768w,\n/static/b8ff6dc0a1e900b190c9d40910300f12/f80f8/DFS%20AND%20BFS.webp 1536w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"aa0169f6-77cb-5507-b2e0-4418d1075102","fields":{"slug":"/탐색알고리즘/"},"frontmatter":{"title":"탐색알고리즘","summary":"리스트 안에 있는 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 차례대로 확인하는 방법","date":"2023.06.17","categories":["알고리즘","Python"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#a87888","images":{"fallback":{"src":"/static/3f7fbd3be95364da1f101e9494b3be1c/88eeb/%ED%83%90%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98.webp","srcSet":"/static/3f7fbd3be95364da1f101e9494b3be1c/23244/%ED%83%90%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98.webp 192w,\n/static/3f7fbd3be95364da1f101e9494b3be1c/d4e33/%ED%83%90%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98.webp 384w,\n/static/3f7fbd3be95364da1f101e9494b3be1c/88eeb/%ED%83%90%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98.webp 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[]},"width":768,"height":400}}}}}},{"node":{"id":"4a7fcc04-390f-5cbc-8d48-4472857c23e8","fields":{"slug":"/다이나믹 프로그래밍/"},"frontmatter":{"title":"다이나믹 프로그래밍","summary":"다이나믹 프로그래밍은 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법","date":"2023.06.18","categories":["알고리즘","Python"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/4fd18ad7d6fe83b8aaf4c639d01365bc/88eeb/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D.webp","srcSet":"/static/4fd18ad7d6fe83b8aaf4c639d01365bc/23244/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D.webp 192w,\n/static/4fd18ad7d6fe83b8aaf4c639d01365bc/d4e33/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D.webp 384w,\n/static/4fd18ad7d6fe83b8aaf4c639d01365bc/88eeb/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D.webp 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[]},"width":768,"height":400}}}}}},{"node":{"id":"eef22044-29c8-5dca-9531-08bfcd10c1d5","fields":{"slug":"/ESP32로 만든 스마트 기숙사 시스템/"},"frontmatter":{"title":"ESP32로 만든 스마트 기숙사 시스템","summary":"이 프로젝트는 스마트 기숙사 시스템으로 원격 문 열기와 출입 감지, 온/습도 모니터링 등을 제공합니다. 다양한 센서와 LCD 디스플레이를 활용하여 학생들의 안전과 편의성을 향상시킬 수 있습니다. 이 프로젝트는 현대적인 기술과 창의적인 아이디어를 결합하여 효율적인 기숙사 관리 시스템을 구축하는 데 성공하였습니다.","date":"2023.06.20","categories":["아두이노","ESP32","PHP","임베디드"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/28647871d9e4c8d77b2e3dd8245a493a/88eeb/ESP32.webp","srcSet":"/static/28647871d9e4c8d77b2e3dd8245a493a/23244/ESP32.webp 192w,\n/static/28647871d9e4c8d77b2e3dd8245a493a/d4e33/ESP32.webp 384w,\n/static/28647871d9e4c8d77b2e3dd8245a493a/88eeb/ESP32.webp 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[]},"width":768,"height":400}}}}}},{"node":{"id":"7a0477ec-6bae-5e88-9b70-97a6d13ed179","fields":{"slug":"/최단 경로/"},"frontmatter":{"title":"최단 경로","summary":"최단 경로 알고리즘은 그래프에서 가장 짧은 경로를 찾는 알고리즘을 의미합니다. 다양한 문제 상황에서 사용될 수 있으며, 주요한 경우는 다음과 같습니다","date":"2023.08.28","categories":["알고리즘"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a75398f78245969eab7384f600e18aac/aa4b6/shortest%20route.png","srcSet":"/static/a75398f78245969eab7384f600e18aac/fa8a0/shortest%20route.png 145w,\n/static/a75398f78245969eab7384f600e18aac/33a7f/shortest%20route.png 290w,\n/static/a75398f78245969eab7384f600e18aac/aa4b6/shortest%20route.png 580w","sizes":"(min-width: 580px) 580px, 100vw"},"sources":[{"srcSet":"/static/a75398f78245969eab7384f600e18aac/0c2fc/shortest%20route.webp 145w,\n/static/a75398f78245969eab7384f600e18aac/de8c9/shortest%20route.webp 290w,\n/static/a75398f78245969eab7384f600e18aac/946b4/shortest%20route.webp 580w","type":"image/webp","sizes":"(min-width: 580px) 580px, 100vw"}]},"width":768,"height":399.88965517241377}}}}}},{"node":{"id":"6187d309-5a08-50ef-9260-8d164b697bc2","fields":{"slug":"/그래프 알고리즘/"},"frontmatter":{"title":"그래프 알고리즘","summary":"그래프는 객체 간의 네트워크를 모델링하는데 사용되는 수학적 구조입니다. 노드(Node)라 불리우는 개체와 이들을 연결하는 간선(Edge)으로 구성됩니다.","date":"2023.08.29","categories":["알고리즘","C++"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/033c3fd924832fdd40f362828c9081b3/ab163/graph.png","srcSet":"/static/033c3fd924832fdd40f362828c9081b3/813cd/graph.png 192w,\n/static/033c3fd924832fdd40f362828c9081b3/24c40/graph.png 384w,\n/static/033c3fd924832fdd40f362828c9081b3/ab163/graph.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/033c3fd924832fdd40f362828c9081b3/23244/graph.webp 192w,\n/static/033c3fd924832fdd40f362828c9081b3/d4e33/graph.webp 384w,\n/static/033c3fd924832fdd40f362828c9081b3/88eeb/graph.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"a8c6ae56-4ff1-5fab-bd90-96ad42b7bde1","fields":{"slug":"/C샵 Class와 Struct차이/"},"frontmatter":{"title":"C# Class와 Struct차이","summary":"기존 C 언어에서는 Class 구분이 없이 Struct를 사용해서 기존 C와 호환성을 위해 Struct를 사용한다.","date":"2023.10.26","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/ab163/StructvsClass.png","srcSet":"/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/813cd/StructvsClass.png 192w,\n/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/24c40/StructvsClass.png 384w,\n/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/ab163/StructvsClass.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/23244/StructvsClass.webp 192w,\n/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/d4e33/StructvsClass.webp 384w,\n/static/8a8d8d39fdfb9e97eb9f96e090c3d0bb/88eeb/StructvsClass.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"358fd236-49d7-57ca-97a9-c99d7afdbff0","fields":{"slug":"/private에 접근하기, get set과 property 속성/"},"frontmatter":{"title":"private에 접근하기, get set과 property 속성","summary":"메모리를 보유한 객체를 이용해서 맴버에 점(.)을 찍고 접근할 수 있는지 없는지의 제어를 말한다.","date":"2023.10.27","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#4888e8","images":{"fallback":{"src":"/static/a43609684e8ffd3e2873b997725bd4b0/d5f62/Property.jpg","srcSet":"/static/a43609684e8ffd3e2873b997725bd4b0/2efeb/Property.jpg 177w,\n/static/a43609684e8ffd3e2873b997725bd4b0/b3b73/Property.jpg 354w,\n/static/a43609684e8ffd3e2873b997725bd4b0/d5f62/Property.jpg 707w","sizes":"(min-width: 707px) 707px, 100vw"},"sources":[{"srcSet":"/static/a43609684e8ffd3e2873b997725bd4b0/993ed/Property.webp 177w,\n/static/a43609684e8ffd3e2873b997725bd4b0/ca3e2/Property.webp 354w,\n/static/a43609684e8ffd3e2873b997725bd4b0/444a9/Property.webp 707w","type":"image/webp","sizes":"(min-width: 707px) 707px, 100vw"}]},"width":768,"height":399.75106082036774}}}}}},{"node":{"id":"f1a01283-84b4-5340-baa9-e6e277cd514b","fields":{"slug":"/private, public, protected 접근제어/"},"frontmatter":{"title":"private, public, protected 접근제어","summary":"1. public : 다른 클래스에서도 접근 가능 2. private : 그 맴버를 선언한 클래스 내부에서만 접근 가능 3. protected : 그 멤버를 선언한 클래스 + 그걸 상속받은 자식 클래스 내부에서만 접근 가능","date":"2023.10.30","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a6c0c8b314db05f584d0d6f3f08d9ecf/ab163/public.png","srcSet":"/static/a6c0c8b314db05f584d0d6f3f08d9ecf/813cd/public.png 192w,\n/static/a6c0c8b314db05f584d0d6f3f08d9ecf/24c40/public.png 384w,\n/static/a6c0c8b314db05f584d0d6f3f08d9ecf/ab163/public.png 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/a6c0c8b314db05f584d0d6f3f08d9ecf/23244/public.webp 192w,\n/static/a6c0c8b314db05f584d0d6f3f08d9ecf/d4e33/public.webp 384w,\n/static/a6c0c8b314db05f584d0d6f3f08d9ecf/88eeb/public.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"6b7fb6ac-4bc9-51c9-925a-355ffd1abe96","fields":{"slug":"/콜바이밸류 vs 콜바이레퍼런스 ref와 out 차이/"},"frontmatter":{"title":"콜바이밸류 vs 콜바이레퍼런스 ref와 out 차이","summary":"Call by value (값에 의한 전달) : 값만 보내니, 보잰 값을 아무리 바꿔도 원본 값은 안 바뀐다. Call by reference (참조에 의한 전달) : 원본 값의 주소를 보내니, 값을 바꾸면 원본도 바뀐다.","date":"2023.10.31","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9c5b3d213876b2e211193f074ae31d84/3e68b/callbyvaluevscallbyrefrence.webp","srcSet":"/static/9c5b3d213876b2e211193f074ae31d84/06560/callbyvaluevscallbyrefrence.webp 150w,\n/static/9c5b3d213876b2e211193f074ae31d84/b40f3/callbyvaluevscallbyrefrence.webp 301w,\n/static/9c5b3d213876b2e211193f074ae31d84/3e68b/callbyvaluevscallbyrefrence.webp 601w","sizes":"(min-width: 601px) 601px, 100vw"},"sources":[]},"width":768,"height":399.97337770382694}}}}}},{"node":{"id":"7f7cf4b4-25b0-51fb-abfa-8d0cf382652d","fields":{"slug":"/생성자와 static 변수/"},"frontmatter":{"title":"생성자와 static 변수","summary":"1. 생성자 생성자 함수는 메모리가 생성된 직후 가장 먼저 호출되는 함수이다. 모든 class는 메모리가 생성될 경우 자신과 이름이 똑같은 함수를 가장 먼저 호출한다.","date":"2023.11.01","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f48e91ca89f3ac1cfde9650ebdce6485/d5821/%EC%83%9D%EC%84%B1%EC%9E%90.png","srcSet":"/static/f48e91ca89f3ac1cfde9650ebdce6485/da70d/%EC%83%9D%EC%84%B1%EC%9E%90.png 125w,\n/static/f48e91ca89f3ac1cfde9650ebdce6485/6767b/%EC%83%9D%EC%84%B1%EC%9E%90.png 250w,\n/static/f48e91ca89f3ac1cfde9650ebdce6485/d5821/%EC%83%9D%EC%84%B1%EC%9E%90.png 500w","sizes":"(min-width: 500px) 500px, 100vw"},"sources":[{"srcSet":"/static/f48e91ca89f3ac1cfde9650ebdce6485/971ea/%EC%83%9D%EC%84%B1%EC%9E%90.webp 125w,\n/static/f48e91ca89f3ac1cfde9650ebdce6485/907fe/%EC%83%9D%EC%84%B1%EC%9E%90.webp 250w,\n/static/f48e91ca89f3ac1cfde9650ebdce6485/5933c/%EC%83%9D%EC%84%B1%EC%9E%90.webp 500w","type":"image/webp","sizes":"(min-width: 500px) 500px, 100vw"}]},"width":768,"height":399.36}}}}}},{"node":{"id":"cbe6b2fd-5ac7-5a66-89b3-ae76e0bfc38f","fields":{"slug":"/static 접근방식 변수, 함수, 생성자/"},"frontmatter":{"title":"static 접근방식 변수, 함수, 생성자","summary":"일반 맴버 변수는 객체를 생성해야지만 메모리가 생성된다. (별도로 메모리를 할당해야 접근가능) 하지만 스태틱 변수는 객체 생성 이전에 접근할 수 있다. (프로그램 시작과 동시에 가장 먼저 할당)","date":"2023.11.02","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/fcc42778bbeefb1759f3eda87c1b8b2a/36107/static.png","srcSet":"/static/fcc42778bbeefb1759f3eda87c1b8b2a/ca874/static.png 151w,\n/static/fcc42778bbeefb1759f3eda87c1b8b2a/3f59b/static.png 302w,\n/static/fcc42778bbeefb1759f3eda87c1b8b2a/36107/static.png 604w","sizes":"(min-width: 604px) 604px, 100vw"},"sources":[{"srcSet":"/static/fcc42778bbeefb1759f3eda87c1b8b2a/52b7e/static.webp 151w,\n/static/fcc42778bbeefb1759f3eda87c1b8b2a/83024/static.webp 302w,\n/static/fcc42778bbeefb1759f3eda87c1b8b2a/81d8f/static.webp 604w","type":"image/webp","sizes":"(min-width: 604px) 604px, 100vw"}]},"width":768,"height":400.5298013245033}}}}}},{"node":{"id":"62d166c7-a851-5574-a832-186fc08a4534","fields":{"slug":"/const 상수와 readonly 상수 차이/"},"frontmatter":{"title":"const 상수와 readonly 상수 차이","summary":"상수 : 변수와는 달리 변경이 불가능하다. (예) 10 = 100; const 키워드 : 상수를 선언하는 키워드이다.","date":"2023.11.03","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e5795fbecfe5d7db46c82eb6f188ec41/3ed7f/constVSreadonly.png","srcSet":"/static/e5795fbecfe5d7db46c82eb6f188ec41/2d05f/constVSreadonly.png 146w,\n/static/e5795fbecfe5d7db46c82eb6f188ec41/dd954/constVSreadonly.png 293w,\n/static/e5795fbecfe5d7db46c82eb6f188ec41/3ed7f/constVSreadonly.png 585w","sizes":"(min-width: 585px) 585px, 100vw"},"sources":[{"srcSet":"/static/e5795fbecfe5d7db46c82eb6f188ec41/c61de/constVSreadonly.webp 146w,\n/static/e5795fbecfe5d7db46c82eb6f188ec41/5e0be/constVSreadonly.webp 293w,\n/static/e5795fbecfe5d7db46c82eb6f188ec41/50f24/constVSreadonly.webp 585w","type":"image/webp","sizes":"(min-width: 585px) 585px, 100vw"}]},"width":768,"height":400.4102564102564}}}}}},{"node":{"id":"64d56843-33c8-5cfe-ac7c-1ac3c3d9758f","fields":{"slug":"/오버로딩(Over loading)/"},"frontmatter":{"title":"오버로딩(Over loading)","summary":"하나의 이름으로 여러 개의 함수를 만드는 기법 [오버로딩(Over loading)을 사용하는 이유] 함수의 이름 하나로 여러 가지 작업에 대처할 수 있다.","date":"2023.11.04","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/100360536dd277293ce19e0f8e301f46/788a6/overload.gif","srcSet":"/static/100360536dd277293ce19e0f8e301f46/da741/overload.gif 192w,\n/static/100360536dd277293ce19e0f8e301f46/f1954/overload.gif 384w,\n/static/100360536dd277293ce19e0f8e301f46/788a6/overload.gif 768w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/100360536dd277293ce19e0f8e301f46/23244/overload.webp 192w,\n/static/100360536dd277293ce19e0f8e301f46/d4e33/overload.webp 384w,\n/static/100360536dd277293ce19e0f8e301f46/88eeb/overload.webp 768w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}},{"node":{"id":"85b1a28c-4124-533a-9ea6-de8755a2d949","fields":{"slug":"/연산자 오버로딩/"},"frontmatter":{"title":"연산자 오버로딩","summary":"연산자 오버로딩(Operator Overloading) 연산자의 종류는 이렇다. + (더하기) - (빼기) * (곱하기) / (나누기)","date":"2023.11.05","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/d39e7bc53e8853f4f4908add0b4b795d/5f1c8/operator.png","srcSet":"/static/d39e7bc53e8853f4f4908add0b4b795d/9b1d7/operator.png 150w,\n/static/d39e7bc53e8853f4f4908add0b4b795d/e0bb1/operator.png 300w,\n/static/d39e7bc53e8853f4f4908add0b4b795d/5f1c8/operator.png 600w","sizes":"(min-width: 600px) 600px, 100vw"},"sources":[{"srcSet":"/static/d39e7bc53e8853f4f4908add0b4b795d/06560/operator.webp 150w,\n/static/d39e7bc53e8853f4f4908add0b4b795d/b8c22/operator.webp 300w,\n/static/d39e7bc53e8853f4f4908add0b4b795d/88a53/operator.webp 600w","type":"image/webp","sizes":"(min-width: 600px) 600px, 100vw"}]},"width":768,"height":400.64}}}}}},{"node":{"id":"2fa9a166-7468-5cad-975d-a2b9398546ea","fields":{"slug":"/this와 this를 통한 생성자 호출/"},"frontmatter":{"title":"this와 this를 통한 생성자 호출","summary":"this 클래스 내에서 정의된 맴버를 가르킬때 사용한다. 만약 클래스 내에서 생성된 변수와 매개변수의 이름이 똑같다면 - this를 붙이면 클래스 내에서 생성된 변수를 출력한다. - this를 빼면 매개변수를 출력한다.","date":"2023.11.07","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/381b648e7fa624f6687fe70ae9648a54/3872e/C%23.png","srcSet":"/static/381b648e7fa624f6687fe70ae9648a54/ef48c/C%23.png 160w,\n/static/381b648e7fa624f6687fe70ae9648a54/4eb95/C%23.png 320w,\n/static/381b648e7fa624f6687fe70ae9648a54/3872e/C%23.png 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/381b648e7fa624f6687fe70ae9648a54/fcabc/C%23.webp 160w,\n/static/381b648e7fa624f6687fe70ae9648a54/9c0da/C%23.webp 320w,\n/static/381b648e7fa624f6687fe70ae9648a54/83af1/C%23.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":768,"height":399.6}}}}}}]},"file":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2785e6b7287f0337c6d0e1769e2f4f1c/73bb6/profile-image.jpg","srcSet":"/static/2785e6b7287f0337c6d0e1769e2f4f1c/3c559/profile-image.jpg 30w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/93848/profile-image.jpg 60w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/73bb6/profile-image.jpg 120w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/f9edd/profile-image.jpg 240w","sizes":"(min-width: 120px) 120px, 100vw"},"sources":[{"srcSet":"/static/2785e6b7287f0337c6d0e1769e2f4f1c/bde72/profile-image.webp 30w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/927d1/profile-image.webp 60w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/507b0/profile-image.webp 120w,\n/static/2785e6b7287f0337c6d0e1769e2f4f1c/8d565/profile-image.webp 240w","type":"image/webp","sizes":"(min-width: 120px) 120px, 100vw"}]},"width":120,"height":120}},"publicURL":"/static/2785e6b7287f0337c6d0e1769e2f4f1c/profile-image.jpeg"}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}