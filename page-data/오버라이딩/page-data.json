{"componentChunkName":"component---src-templates-post-template-tsx","path":"/오버라이딩/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"오버라이딩\" style=\"position:relative;\">오버라이딩<a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"오버라이딩 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<blockquote>\n<p>상속 받은 것을 그대로 안 쓰고 고쳐서 쓴다 <strong>(재정의)</strong>\n즉, 아빠가 입던 옷을 물려받은 뒤, 그걸 수선집에서 고쳐서 입는 셈</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> 아버지\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 300개의 함수들</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아빠가 입다 버린 구닥다리 옷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 아들 <span class=\"token punctuation\">:</span> 아버지 <span class=\"token comment\">// 아버지로부터 상속을 받음</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 아들이 물려받은 뒤 고쳐 쓴 함수들</span>\n    <span class=\"token keyword\">new</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 오버라이딩 (구별하기 위해 new 키워드를 쓰자)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"자식이 아빠 옷을 수선했다\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 아들 함수들</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 내옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"자식 전용 옷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 메인\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        아들 son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 아들<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        son<span class=\"token punctuation\">.</span>아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        son<span class=\"token punctuation\">.</span>내옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<hr>\n<h1 id=\"base\" style=\"position:relative;\">base<a href=\"#base\" aria-label=\"base permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<blockquote>\n<p><strong>자식 클래스</strong>에서 <strong>부모 클래스</strong>를 가리키는 키워드</p>\n</blockquote>\n<p>앞에서 오버라이딩이란 개념을 살펴봤었다.\n오버라이딩이란, 자식이 부모로부터 아빠옷을 상속받은 뒤 그것을 자신의 몸에 맞게 수선하는 것이다.\n그런데 수선하기 이전의 오리지날 아빠옷을 다시 입어야 하는 경우라면 어떻게 해야 할까?</p>\n<h2 id=\"base-사용-예시\" style=\"position:relative;\">[base 사용 예시]<a href=\"#base-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"base 사용 예시 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><strong>base</strong>를 사용해서 다시 구닥다리 아빠옷을 입는 아들</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> 아버지\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아빠의 냄새나는 옛날 옷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 아들 <span class=\"token punctuation\">:</span> 아버지\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아들이 고쳐 씀\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 돈없는_아들<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 아빠 클래스에 있는 함수가 호출 됨</span>\n        아빠옷<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 아들 클레스에 있는 오버라이딩 된 함수가 호출 됨</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 메인\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        아들 son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 아들<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        son<span class=\"token punctuation\">.</span>돈없는_아들<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"또한-부모클래스의-생성자-함수가-매개변수를-받아야-하는-상황일-경우\" style=\"position:relative;\">또한 <strong>부모클래스</strong>의 생성자 함수가 <strong>매개변수</strong>를 받아야 하는 상황일 경우<a href=\"#%EB%98%90%ED%95%9C-%EB%B6%80%EB%AA%A8%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EA%B0%80-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EB%B0%9B%EC%95%84%EC%95%BC-%ED%95%98%EB%8A%94-%EC%83%81%ED%99%A9%EC%9D%BC-%EA%B2%BD%EC%9A%B0\" aria-label=\"또한 부모클래스의 생성자 함수가 매개변수를 받아야 하는 상황일 경우 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>상속받는 <strong>자식클래스</strong>는 반드시 <strong>부모클래스</strong>의 <strong>매개변수</strong>에 값을 전달해줘야 한다.</p>\n<p><strong>자식 클래스</strong>가 호출되면 <strong>부모 클래스</strong>도 덩달아 같이 호출이 되는데\n<strong>부모 클래스</strong>의 생성자의 <strong>매개변수</strong>에 값을 전달하지 않는다면 에러가 발생한다.\n이때 <strong>base</strong>를 통해 부모 클래스의 생성자에 값을 전달할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Configuration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> 아버지\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//생성자 함수 (아빠라는 형태의 객체가 메모리에 할당되면 가장 먼저 호출되는 함수)</span>\n    <span class=\"token keyword\">public</span> 아버지<span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> father<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 아빠 생성자 생성 : {0}\"</span><span class=\"token punctuation\">,</span> father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 아들 <span class=\"token punctuation\">:</span> 아버지\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> 아들<span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> son<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>son<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 아들 생성자 생성: {0}\"</span><span class=\"token punctuation\">,</span> son<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> 메인\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        아들 son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 아들<span class=\"token punctuation\">(</span><span class=\"token string\">\"아들에게 준 값\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"오버라이딩","summary":"오버라이딩 상속 받은 것을 그대로 안 쓰고 고쳐서 쓴다 (재정의) 즉, 아빠가 입던 옷을 물려받은 뒤, 그걸 수선집에서 고쳐서 입는 셈","date":"2023.11.08","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/737fda6f7a0bbee8c4f493c3e0eca1d4/ce4d7/overriding.png","srcSet":"/static/737fda6f7a0bbee8c4f493c3e0eca1d4/12d18/overriding.png 180w,\n/static/737fda6f7a0bbee8c4f493c3e0eca1d4/81039/overriding.png 360w,\n/static/737fda6f7a0bbee8c4f493c3e0eca1d4/ce4d7/overriding.png 720w","sizes":"(min-width: 720px) 720px, 100vw"},"sources":[{"srcSet":"/static/737fda6f7a0bbee8c4f493c3e0eca1d4/d1730/overriding.webp 180w,\n/static/737fda6f7a0bbee8c4f493c3e0eca1d4/e02de/overriding.webp 360w,\n/static/737fda6f7a0bbee8c4f493c3e0eca1d4/4c661/overriding.webp 720w","type":"image/webp","sizes":"(min-width: 720px) 720px, 100vw"}]},"width":720,"height":360}},"publicURL":"/static/737fda6f7a0bbee8c4f493c3e0eca1d4/overriding.png"}}}}]}},"pageContext":{"slug":"/오버라이딩/"}},"staticQueryHashes":[],"slicesMap":{}}