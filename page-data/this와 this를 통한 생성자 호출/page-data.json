{"componentChunkName":"component---src-templates-post-template-tsx","path":"/this와 this를 통한 생성자 호출/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"this와-this를-통한-생성자-호출\" style=\"position:relative;\">this와 this를 통한 생성자 호출<a href=\"#this%EC%99%80-this%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%98%B8%EC%B6%9C\" aria-label=\"this와 this를 통한 생성자 호출 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"this\" style=\"position:relative;\">this<a href=\"#this\" aria-label=\"this permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><strong>클래스 내</strong>에서 정의된 <strong>맴버</strong>를 가르킬때 사용한다.</p>\n<blockquote>\n<p>만약 클래스 내에서 생성된 변수와 매개변수의 이름이 똑같다면</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- this를 붙이면 클래스 내에서 생성된 변수를 출력한다.\n- this를 빼면 매개변수를 출력한다.</code></pre></div>\n<h3 id=\"코드\" style=\"position:relative;\">코드<a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThisTest</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"하이\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">ThisTest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ThisTest</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ThisTest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"바이\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<hr>\n<h1 id=\"this를-통한-생성자-호출\" style=\"position:relative;\">this를 통한 생성자 호출<a href=\"#this%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%98%B8%EC%B6%9C\" aria-label=\"this를 통한 생성자 호출 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<blockquote>\n<p>생성자를 여러개 만든 경우, 그 중 조건에 맞는 생성자만 호출이 된다.\n이때, this를 사용해서 여러개의 생성자를 한꺼번에 호출할 수 있다.</p>\n</blockquote>\n<h2 id=\"1-this를-사용-안해서-매번-따로따로-생성자-함수를-호출하는-경우\" style=\"position:relative;\">1. this를 사용 안해서 매번 따로따로 생성자 함수를 호출하는 경우<a href=\"#1-this%EB%A5%BC-%EC%82%AC%EC%9A%A9-%EC%95%88%ED%95%B4%EC%84%9C-%EB%A7%A4%EB%B2%88-%EB%94%B0%EB%A1%9C%EB%94%B0%EB%A1%9C-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"1 this를 사용 안해서 매번 따로따로 생성자 함수를 호출하는 경우 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 알바호출\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[1번 생성자 호출]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"계산대에서 멍때리기\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 2번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> clean<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[2번 생성자: 매개변수가 1개]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사장 왈: \"</span> <span class=\"token operator\">+</span> clean <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 3번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> clean<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> calculation<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[3번 생성자: 매개변수가 2개]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"손님 왈: 계산 좀 해주세요~ \"</span> <span class=\"token operator\">+</span> calculation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사장 왈: \"</span> <span class=\"token operator\">+</span> clean <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 알바호출1</span>\n        알바호출 call1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 알바호출2</span>\n        알바호출 call2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token string\">\"알바야 청소 좀 해라\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 알바호출3</span>\n        알바호출 call3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token string\">\"알바야 청소 좀 해라\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"2-this를-사용해서-한방에-3개의-생성자-함수를-호출하는-경우\" style=\"position:relative;\">2. this를 사용해서 한방에 3개의 생성자 함수를 호출하는 경우<a href=\"#2-this%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%ED%95%9C%EB%B0%A9%EC%97%90-3%EA%B0%9C%EC%9D%98-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"2 this를 사용해서 한방에 3개의 생성자 함수를 호출하는 경우 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>하지만 혼자서 여러가지 일을 처리하는 것이 불만이었던 알바는\n분신술을 사용해서 자신을 여러명 소환한 뒤, 한꺼번에 여러가지 일을 처리하기로 했다.\nthis를 사용해서 한꺼번에 여러개의 생성자 함수를 호출</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 알바호출\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"분신술 사용\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[1번 생성자 호출]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"계산대에서 멍때리기\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 2번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> clean<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"또 분신술 사용\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[2번 생성자: 매개변수가 1개]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사장 왈: \"</span> <span class=\"token operator\">+</span> clean <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 3번 생성자</span>\n    <span class=\"token keyword\">public</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> clean<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> calculation<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[3번 생성자: 매개변수가 2개]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"손님 왈: 계산 좀 해주세요~ \"</span> <span class=\"token operator\">+</span> calculation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사장 왈: \"</span> <span class=\"token operator\">+</span> clean <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 알바호출1</span>\n        알바호출 call1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> 알바호출<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"상속-배울때-나온-예제\" style=\"position:relative;\">상속 배울때 나온 예제<a href=\"#%EC%83%81%EC%86%8D-%EB%B0%B0%EC%9A%B8%EB%95%8C-%EB%82%98%EC%98%A8-%EC%98%88%EC%A0%9C\" aria-label=\"상속 배울때 나온 예제 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<blockquote>\n<p>[할아버지 -> 아빠 -> 아들] 순서로 실행되는 것처럼\n생성자도 [3번 -> 2번 -> 1번] 순서로 호출되게 된다.</p>\n</blockquote>\n<hr>","frontmatter":{"title":"this와 this를 통한 생성자 호출","summary":"this 클래스 내에서 정의된 맴버를 가르킬때 사용한다. 만약 클래스 내에서 생성된 변수와 매개변수의 이름이 똑같다면 - this를 붙이면 클래스 내에서 생성된 변수를 출력한다. - this를 빼면 매개변수를 출력한다.","date":"2023.11.07","categories":["C샵"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/381b648e7fa624f6687fe70ae9648a54/9a63f/C%23.png","srcSet":"/static/381b648e7fa624f6687fe70ae9648a54/af781/C%23.png 160w,\n/static/381b648e7fa624f6687fe70ae9648a54/f80f8/C%23.png 320w,\n/static/381b648e7fa624f6687fe70ae9648a54/9a63f/C%23.png 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/381b648e7fa624f6687fe70ae9648a54/67032/C%23.webp 160w,\n/static/381b648e7fa624f6687fe70ae9648a54/c0bcc/C%23.webp 320w,\n/static/381b648e7fa624f6687fe70ae9648a54/17574/C%23.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":360}},"publicURL":"/static/381b648e7fa624f6687fe70ae9648a54/C#.png"}}}}]}},"pageContext":{"slug":"/this와 this를 통한 생성자 호출/"}},"staticQueryHashes":[],"slicesMap":{}}