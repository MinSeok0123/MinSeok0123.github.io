{"version":3,"file":"component---src-pages-recent-tsx-02f46167e70e56f68672.js","mappings":"2MAiGA,UA9DqD,SAAAA,GAYlD,IAXDC,UAAU,OAAEC,GACZC,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,IAEtCC,mBAAmB,MAAEC,GACrBC,MACEC,iBAAiB,gBAAEC,GAAiB,UACpCC,KAGLd,EACC,MAAMe,EAA8BC,EAAAA,EAAAA,MAAkBd,GAChDe,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MA4BN,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CACPd,MAAOA,EACPC,YAAaA,EACbc,IAAKb,EACLc,MAAOR,IAEPK,EAAAA,EAAAA,IAACI,EAAAA,EAAY,CAACC,aAAcX,KAK5BM,EAAAA,EAAAA,IAACM,EAAAA,EAAS,OACVN,EAAAA,EAAAA,IAACO,EAAAA,EAAQ,CAACT,iBAAkBA,EAAkBU,MAAOjB,IAG3D,C","sources":["webpack://gatsby-starter-default/./src/pages/recent.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport queryString, { ParsedQuery } from 'query-string'\nimport { PostListItemType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\nimport Introduction from 'components/Main/Introduction'\nimport PostList from 'components/Main/PostList'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport ToggleNav from 'components/Main/ToggleNav'\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  // const categoryList = useMemo(\n  //   () =>\n  //     edges.reduce(\n  //       (\n  //         list: CategoryListProps['categoryList'],\n  //         {\n  //           node: {\n  //             frontmatter: { categories },\n  //           },\n  //         }: PostListItemType,\n  //       ) => {\n  //         categories.forEach(category => {\n  //           if (list[category] === undefined) list[category] = 1\n  //           else list[category]++\n  //         })\n\n  //         list['All']++\n\n  //         return list\n  //       },\n  //       { All: 0 },\n  //     ),\n  //   [],\n  // )\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      {/* <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      /> */}\n      <ToggleNav></ToggleNav>\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  )\n}\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["_ref","location","search","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","publicURL","parsed","queryString","selectedCategory","category","___EmotionJSX","Template","url","image","Introduction","profileImage","ToggleNav","PostList","posts"],"sourceRoot":""}